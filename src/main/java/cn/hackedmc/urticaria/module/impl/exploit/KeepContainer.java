package cn.hackedmc.urticaria.module.impl.exploit;

import cn.hackedmc.urticaria.api.Rise;
import cn.hackedmc.urticaria.module.Module;
import cn.hackedmc.urticaria.module.api.Category;
import cn.hackedmc.urticaria.module.api.ModuleInfo;
import cn.hackedmc.urticaria.newevent.Listener;
import cn.hackedmc.urticaria.newevent.Priorities;
import cn.hackedmc.urticaria.newevent.annotations.EventLink;
import cn.hackedmc.urticaria.newevent.impl.input.KeyboardInputEvent;
import cn.hackedmc.urticaria.newevent.impl.inventory.InventoryOpenEvent;
import cn.hackedmc.urticaria.newevent.impl.other.TickEvent;
import cn.hackedmc.urticaria.newevent.impl.other.WorldChangeEvent;
import cn.hackedmc.urticaria.newevent.impl.packet.PacketReceiveEvent;
import cn.hackedmc.urticaria.newevent.impl.packet.PacketSendEvent;
import cn.hackedmc.urticaria.util.interfaces.InstanceAccess;
import cn.hackedmc.urticaria.util.packet.PacketUtil;
import cn.hackedmc.urticaria.value.impl.BooleanValue;
import cn.hackedmc.urticaria.value.impl.StringValue;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.gui.inventory.GuiChest;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.client.gui.inventory.GuiInventory;
import net.minecraft.inventory.Container;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C0DPacketCloseWindow;
import net.minecraft.network.play.client.C0EPacketClickWindow;
import net.minecraft.network.play.server.*;
import org.lwjgl.input.Keyboard;

@Rise
@ModuleInfo(name = "module.combat.keepcontainer.name", description = "module.exploit.keepcontainer.description", category = Category.EXPLOIT)
public class KeepContainer extends Module {
    private int chestId = 0;
    private GuiChest chestGui;

    @Override
    protected void onEnable() {
        chestId = 0;
        chestGui = null;
    }

    @Override
    protected void onDisable() {
        if (chestId != 0) PacketUtil.sendNoEvent(new C0DPacketCloseWindow(chestId));
        chestGui = null;
        chestId = 0;
    }

    @EventLink
    public final Listener<WorldChangeEvent> onWorldChange = event -> {
        chestId = 0;
        chestGui = null;
    };

    @EventLink(value = Priorities.VERY_LOW)
    public final Listener<PacketReceiveEvent> onPacketReceive = event -> {
        final Packet<?> packet = event.getPacket();

        if (mc.currentScreen == null && chestId != 0 && chestGui != null) {
            if ((packet instanceof S2FPacketSetSlot && ((S2FPacketSetSlot) packet).getWindowId() == chestId) || (packet instanceof S30PacketWindowItems && ((S30PacketWindowItems) packet).func_148911_c() == chestId) || (packet instanceof S31PacketWindowProperty && ((S31PacketWindowProperty) packet).getWindowId() == chestId)) {
                mc.thePlayer.openContainer = chestGui.inventorySlots;
            }
        }

        if (packet instanceof S2DPacketOpenWindow) {
            final S2DPacketOpenWindow wrapped = (S2DPacketOpenWindow) packet;
            chestId = wrapped.getWindowId();
            if (chestGui != null) chestGui.inventorySlots.windowId = wrapped.getWindowId();
        }

        if (packet instanceof S2EPacketCloseWindow) {
            final S2EPacketCloseWindow wrapped = (S2EPacketCloseWindow) packet;
            if (chestGui != null && wrapped.windowId == chestGui.inventorySlots.windowId) {
                chestGui = null;
            }
        }
    };

    @EventLink
    public final Listener<PacketSendEvent> onPacketSend = event -> {
        final Packet<?> packet = event.getPacket();

        if (packet instanceof C0DPacketCloseWindow) {
            event.setCancelled();
//            InstanceAccess.mc.currentScreen = null;
            chestId = ((C0DPacketCloseWindow) packet).windowId;
            if (chestGui != null) {
                chestGui.inventorySlots.windowId = chestId;
            }
        }
    };

    @EventLink
    public final Listener<InventoryOpenEvent> onInventoryOpen = event -> {
        if (chestGui != null) {
            event.setCancelled();
            mc.displayGuiScreen(chestGui);
            mc.thePlayer.openContainer = chestGui.inventorySlots;
        }
    };

    @EventLink
    public final Listener<TickEvent> onTick = event -> {
        if (InstanceAccess.mc.currentScreen instanceof GuiChest) {
            chestGui = (GuiChest) InstanceAccess.mc.currentScreen;
        }
    };
}
